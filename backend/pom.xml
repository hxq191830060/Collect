<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <groupId>org.promise</groupId>
    <artifactId>backend-crowdsource</artifactId>
    <version>1.0</version>

    <modules>
        <module>http-service</module>
        <module>common</module>
        <module>publish-service-api</module>
        <module>publish-service</module>
        <module>test-service</module>
        <module>test-service-api</module>
        <module>user-service</module>
        <module>user-service-api</module>
    </modules>

    <properties>
        <spring.version>2.5.4</spring.version>
        <promise.module.version>1.0</promise.module.version>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <mysql.version>8.0.16</mysql.version>
        <mybatis.version>3.5.9</mybatis.version>
        <mybatis-spring.version>2.2.0</mybatis-spring.version>
        <druid.version>1.2.8</druid.version>
        <jackson.version>2.12.4</jackson.version>
        <lombok.version>1.18.10</lombok.version>
        <commons.lang3.version>3.10</commons.lang3.version>
        <common.collections4.version>4.4</common.collections4.version>
        <dubbo.version>2.7.15</dubbo.version>
        <mapstruct.version>1.3.0.Final</mapstruct.version>
        <logback.version>1.2.5</logback.version>
        <spring.configration.version>2.6.4</spring.configration.version>
        <aliyun.sdk.core.version>4.4.6</aliyun.sdk.core.version>
        <aliyun.sdk.sts.version>3.0.0</aliyun.sdk.sts.version>
        <jacoco.version>0.8.5</jacoco.version>
        <jupiter.version>5.6.2</jupiter.version>
        <jjwt.version>0.9.1</jjwt.version>
        <mockito.version>1.10.19</mockito.version>
        <micrometer.registry.prometheus.version>1.8.3</micrometer.registry.prometheus.version>
        <redisson.version>3.16.4</redisson.version>
        <fst.version>2.57</fst.version>
    </properties>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring.configration.version}</version>
            </dependency>

            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${jupiter.version}</version>
                <scope>test</scope>
            </dependency>


            <!--内部项目的版本控制-->
            <dependency>
                <groupId>org.promise</groupId>
                <artifactId>common</artifactId>
                <version>${promise.module.version}</version>
            </dependency>

            <dependency>
                <groupId>org.promise</groupId>
                <artifactId>publish-service</artifactId>
                <version>${promise.module.version}</version>
            </dependency>

            <dependency>
                <groupId>org.promise</groupId>
                <artifactId>publish-service-api</artifactId>
                <version>${promise.module.version}</version>
            </dependency>

            <dependency>
                <groupId>org.promise</groupId>
                <artifactId>http-service</artifactId>
                <version>${promise.module.version}</version>
            </dependency>

            <dependency>
                <groupId>org.promise</groupId>
                <artifactId>test-service-api</artifactId>
                <version>${promise.module.version}</version>
            </dependency>
            <dependency>
                <groupId>org.promise</groupId>
                <artifactId>test-service</artifactId>
                <version>${promise.module.version}</version>
            </dependency>

            <dependency>
                <groupId>org.promise</groupId>
                <artifactId>user-service-api</artifactId>
                <version>${promise.module.version}</version>
            </dependency>

            <dependency>
                <groupId>org.promise</groupId>
                <artifactId>user-service</artifactId>
                <version>${promise.module.version}</version>
            </dependency>


            <!-- mysql依赖，mybatis依赖，数据源druid依赖-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- redisson的工具包 -->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.version}</version>
            </dependency>
            <!-- redisson序列化工具 -->
            <dependency>
                <groupId>de.ruedigermoeller</groupId>
                <artifactId>fst</artifactId>
                <version>${fst.version}</version>
            </dependency>



            <!--工具包依赖-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons.lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${common.collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer.registry.prometheus.version}</version>
            </dependency>

            <!--Jackson依赖-->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>


            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${dubbo.version}</version>
            </dependency>


            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-registry-nacos</artifactId>
                <version>${dubbo.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.dubbo</groupId>
                        <artifactId>dubbo-common</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.dubbo</groupId>
                        <artifactId>dubbo-remoting-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>



            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-jdk8</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>


            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-core</artifactId>
                <version>${aliyun.sdk.core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-sts</artifactId>
                <version>${aliyun.sdk.sts.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>
